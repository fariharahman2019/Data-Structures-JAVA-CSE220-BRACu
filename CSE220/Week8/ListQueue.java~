public class ListQueue implements Queue
{
    int size;
    Node top;
    Node tail;
    
    
    public ListQueue()
    {
        tail= null;
        size = 0;
        top = null;
    }
    public int size()
    {
        return this.size;
    }
    public boolean isEmpty()
    {
        boolean flag = false;
        if(this.size==0)
        {
            flag=true;
        }
        return flag;
    }
    
    public void enqueue(Object e) throws QueueOverflowException
    {
        
        Node temp = new Node(e, null, null);
        temp.next = tail;
        tail.prev = temp;
        tail = temp;
        size++;
    }
    
    public Object dequeue() throws QueueUnderflowException
     {
         if(top==null)
         {
             throw new QueueUnderflowException();
         }
        
         Node p = top;
         top = top.next;
         top.prev=null;
         size--;
         return p;
         
     }
    public String toString()
    {
        String s =" ";
        for(Node n=top; n!=null; n=n.next)
        {
             s=s+" "+n.val;
        
        }
        return s;
    }
    public void clear()
    {
        top=null;
        top.next=null;
        top.prev=null;
        size=0;
    }
}